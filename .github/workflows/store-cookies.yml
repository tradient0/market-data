name: Selenium Cookies Extractor

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run-selenium-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium

      - name: Set Up ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip xvfb libxi6 libgconf-2-4
          # Copy the ChromeDriver from the repo to the appropriate location
          sudo cp chrome/chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver

      - name: Run Selenium Script
        env:
          DISPLAY: ':99.0'
        run: |
          sudo Xvfb :99 -ac &
          python script/selenium_script.py > cookies_output.txt

      - name: Store Cookies as Variable
        run: |
          # Read the cookies from the output file
          COOKIES=$(cat cookies_output.txt)
          
          # Verify that the cookies are captured correctly
          if [ -z "$COOKIES" ]; then
            echo "Error: Cookies not captured."
            exit 1
          fi
          
          # Export the cookies as an environment variable
          echo "CORPORATE_ACTION_NSE_COOKIES=$COOKIES" >> $GITHUB_ENV

      - name: Persist Cookies Variable for Other Jobs
        uses: UnlyEd/github-action-store-variable@v3
        with:
          variables: |
            CORPORATE_ACTION_NSE_COOKIES=${{ env.CORPORATE_ACTION_NSE_COOKIES }}

  # Example of another job that reuses the stored variable
  another-job:
    name: Reuse Cookies Variable
    runs-on: ubuntu-latest
    needs: run-selenium-script
    steps:
      - name: Retrieve Cookies Variable
        uses: UnlyEd/github-action-store-variable@v3
        with:
          variables: |
            CORPORATE_ACTION_NSE_COOKIES

      - name: Use Cookies Variable
        run: echo "Cookies variable retrieved: ${{ env.CORPORATE_ACTION_NSE_COOKIES }}"
