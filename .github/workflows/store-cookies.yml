name: Store NSE Cookies

on:
  workflow_dispatch: # Allows the workflow to be manually triggered via a button in the GitHub Actions UI
  schedule:
    - cron: '0 * * * *'  # Adjust as needed; this runs every hour

permissions:
  contents: read
  actions: write  # Ensure the workflow can write to secrets

jobs:
  fetch-cookies:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install Puppeteer
      run: npm install puppeteer

    - name: Fetch Cookies with Puppeteer
      id: fetch_cookies
      run: |
        # Inline Node.js script to fetch cookies
        cat << 'EOF' > fetchCookies.js
        const puppeteer = require('puppeteer');

        (async () => {
            const browser = await puppeteer.launch({ headless: true });
            const page = await browser.newPage();

            // Navigate to the page
            await page.goto('https://www.nseindia.com/companies-listing/corporate-filings-actions');

            // Wait for the page to load (adjust as needed)
            await page.waitForTimeout(5000);

            // Get cookies from the page
            const cookies = await page.cookies();

            // Format cookies as a single string
            const cookieString = cookies.map(cookie => `${cookie.name}=${cookie.value}`).join('; ');

            console.log(cookieString);

            await browser.close();
        })();
        EOF

        # Run the Node.js script and capture the cookies
        node fetchCookies.js | tee cookies.txt
        COOKIES=$(cat cookies.txt)
        echo "COOKIES=$COOKIES" >> $GITHUB_ENV

    - name: Echo Cookies
      run: echo "Fetched Cookies: ${{ env.COOKIES }}"

    - name: Store Cookies as a GitHub Secret
      run: |
        echo "${{ env.COOKIES }}" | gh secret set CORPORATE_ACTION_NSE_COOKIES --body -
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
